(def nft-shop
  (deploy
   '(do
      (def counter 0)

      ;; Mapping of owner to a set of Listing ID.
      (def selling {})

      ;; Listings indexed by ID.
      (def listing {})

      (defn create-listing [new-listing]
        (let [owner *caller*

              id counter

              owner-selling (get selling owner #{})
              owner-selling (conj owner-selling id)]

          (def selling (assoc selling owner owner-selling))

          (def listing (assoc listing id new-listing))

          (def counter (inc counter))

          id))

      ;; Returns a list of Listings.
      (defn shop []
        (mapcat
         (fn [owner+ids]
           (map
            (fn [id]
              (get listing id))
            (last owner+ids)))
         selling))

      (export create-listing shop))))